services:
  web:
    build: .
    command: >
      sh -c "
        uv run manage.py migrate &&
        uv run manage.py collectstatic --noinput &&
        uv run manage.py compilemessages &&
        uv run gunicorn django_webapps.wsgi:application --bind 0.0.0.0:8000
      "
    env_file:
      - .env
    volumes:
      - .:/code
      - static_volume:/code/static
    depends_on:
      - postgres
      - redis

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/code/static
    restart: always
    depends_on:
      - web

  redis:
    image: redis:latest
    container_name: redis_broker
    ports:
      - "6379"
    restart: always
    volumes:
      - redis-data:/data

  postgres:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432"

  celery_worker:
    build: .
    command: >
      sh -c "
        uv run celery -A django_webapps worker --loglevel=info
      "
    env_file:
      - .env
    volumes:
      - .:/code
    depends_on:
      - web

  celery_beat:
    build:  .
    command: >
      sh -c "
        uv run celery -A django_webapps beat --loglevel=info
      "
    env_file:
      - .env
    volumes:
      - .:/code
    depends_on:
      - web


volumes:
  redis-data:
  postgres-data:
  static_volume:
